<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.loadero</groupId>
    <artifactId>loadero-java</artifactId>
    <version>1.1.4</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <maven.javadoc.plugin>3.2.0</maven.javadoc.plugin>
        <maven.source.plugin>3.2.0</maven.source.plugin>
        <maven.javadoc.outputDir>docs</maven.javadoc.outputDir>
        <maven.surefire.version>3.0.0-M5</maven.surefire.version>
        <jacoco.version>0.8.7</jacoco.version>
        <junit.jupiter.version>5.8.0-M1</junit.jupiter.version>
        <junit.vintage.version>5.8.0-M1</junit.vintage.version>
        <gson.version>2.8.9</gson.version>
        <apache.httpclient.version>4.5.13</apache.httpclient.version>
        <log4j.version>2.17.1</log4j.version>
        <wiremock.version>2.35.1</wiremock.version>
        <javaparser.version>3.18.0</javaparser.version>
    </properties>
    <profiles>
        <profile>
            <id>mock-profile</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>env</name>
                    <value>mock</value>
                </property>
            </activation>
            <properties>
                <loadero.token>
                    FakeRandomApiToken
                </loadero.token>
                <loadero.baseurl>
                    http://localhost
                </loadero.baseurl>
            </properties>
        </profile>
        <profile>
            <id>live-profile</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>live</value>
                </property>
            </activation>
            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <loadero.token>
                    ${env.LOADERO_API_TOKEN}
                </loadero.token>
                <loadero.baseurl>
                    https://api.loadero.com/v2
                </loadero.baseurl>
            </properties>
        </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <environmentVariables>
                        <!--suppress UnresolvedMavenProperty -->
                        <LOADERO_API_TOKEN>${loadero.token}</LOADERO_API_TOKEN>
                        <LOADERO_BASE_URL>${loadero.baseurl}</LOADERO_BASE_URL>
                    </environmentVariables>
                </configuration>
            </plugin>
          <plugin>  <!-- Create sources.jar -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven.source.plugin}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin}</version>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- JaCoCo plugin for test coverage -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <!-- Minimum requirement for test coverage at least 70%-->
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <excludes>
                                        <exclude>src/main/java/loadero/exceptions/**/*</exclude>
                                        <exclude>src/main/java/loadero/model/**/*</exclude>
                                    </excludes>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.7</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>
    <dependencies>
        <dependency>
            <!-- Junit 5 framework dependency for unit tests -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Vintage dependency to support some annotations from Junit 4 -->
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit.vintage.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Gson dependency used to serialize/deserialize Java objects into JSON and back -->
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <dependency>
            <!-- Apache Httpclient used to create CRUD operations -->
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${apache.httpclient.version}</version>
        </dependency>
        <dependency>
            <!-- JavaParser dependecy is used to parse .java files and extract code snippets
             that a later send to Loadero API as JSON string. -->
            <groupId>com.github.javaparser</groupId>
            <artifactId>javaparser-symbol-solver-core</artifactId>
            <version>${javaparser.version}</version>
        </dependency>
        <dependency>
            <!-- Logging system -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <!-- Dependency for creating unit tests with Wiremock -->
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8</artifactId>
            <version>${wiremock.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
