default:
    image: maven:3-jdk-11
    tags:
        - docker

stages:
    - .pre
    - build
    - test
    - visualize_coverage

variables:
    MAVEN_CLI_OPTS: "-B --errors --fail-at-end"
    MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2
     -Dmaven.repo.local=.m2/repository
     -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
     -Dorg.slf4j.simpleLogger.showDateTime=true
     -Djava.awt.headless=true"

cache:
    paths:
        - .m2/repository/
        - target/

# clean up output of previous compilations
before_build:
    stage: .pre
    script:
        - mvn $MAVEN_CLI_OPTS clean
        - rm target/surefire-reports/TEST-*.xml

compile_build:
    stage: build
    script:
        - mvn $MVN_CLI_OPTS compile
    allow_failure: true

# Run unit tests and generate test coverage reports
# At this stage all unit tests are run against Wiremock instance
# which immitates live Loadero API
unit_tests:
    stage: test
    script:
        - mvn $MAVEN_CLI_OPTS -Dtest=TestLoaderoPackage test
        - cat target/site/jacoco/index.html
    artifacts:
        when: always
        paths:
            - target/site/jacoco/jacoco.xml
            - target/site/jacoco/[loadero].*
        reports:
            junit:
                - target/surefire-reports/TEST-*.xml    
    rules:
        - if: '$CI_PIPELINE_SOURCE == "push"'
          allow_failure: true

# Convert JaCoCo test coverage reports into Cobertura format and visualize        
# source: https://docs.gitlab.com/ee/user/project/merge_requests/test_coverage_visualization.html#maven-example
visualize_tests:
    stage: visualize_coverage
    image: haynes/jacoco2cobertura:1.0.4
    script:
        - 'python /opt/cover2cover.py target/site/jacoco/jacoco.xml src/main/java > target/site/cobertura.xml'
        - 'python /opt/source2filename.py target/site/cobertura.xml'
    needs: ["unit_tests"]
    dependencies:
        - unit_tests
    artifacts:
        reports:
            cobertura: target/site/cobertura.xml