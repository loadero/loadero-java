image: maven:3-jdk-11

variables:
    MAVEN_CLI_OPTS: "-B --errors --fail-at-end"
    MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
cache:
    paths:
        - .m2/repository/
        - target/

# clean up output of previous compilations
before_build:
    stage: .pre
    script:
        - mvn $MAVEN_CLI_OPTS clean
    tags:
        - docker

compile_build:
    stage: build
    script:
        - mvn $MVN_CLI_OPTS compile
    allow_failure: true
    tags:
        - docker

unit_tests:
    stage: test
    script:
        - mvn $MAVEN_CLI_OPTS org.jacoco:jacoco-maven-plugin:prepare-agent test jacoco:report
    artifacts:
        paths:
            - target/site/jacoco/jacoco.xml
 #   rules:
 #       - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
 #         allow_failure: true  
    tags:
        - docker

# converting JaCoCo tests into Cobertura format for visualizing        
# source: https://docs.gitlab.com/ee/user/project/merge_requests/test_coverage_visualization.html#maven-example
visualize_tests:
    stage: deploy
    image: haynes/jacoco2cobertura:1.0.4
    script:
        - 'python /opt/cover2cover.py target/site/jacoco/jacoco.xml src/main/java > target/site/cobertura.xml'
        - 'python /opt/source2filename.py target/site/cobertura.xml'
    needs: ["unit_tests"]
    dependencies:
        - unit_tests
    artifacts:
        reports:
            cobertura: target/site/cobertura.xml        
